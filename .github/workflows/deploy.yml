name: Deploy to EC2

on:
  workflow_run:
    workflows: [ "Backend CI Pipeline" ]    # CI 성공시 자동 트리거
    types: [ completed ]
  workflow_dispatch:                        # 수동 실행도 가능

jobs:
  deploy:
    # 자동 실행 시 CI 성공할 때만 진행, 수동 실행은 무조건 진행
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Docker container to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}          # EC2 퍼블릭 IP
          username: ${{ secrets.EC2_USER }}      # EC2 유저명 (ubuntu)
          key: ${{ secrets.EC2_KEY }}            # EC2 프라이빗 키 (.pem 내용)
          port: 22
          script: |
            echo "===== Docker Login ====="
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            echo "===== Docker Pull ====="
            docker pull ghcr.io/uiseon98/ticketmongo-backend:latest

            echo "===== Stop/Remove Old Container ====="
            docker stop ticketmon-backend || true
            docker rm ticketmon-backend || true

            echo "===== Run New Container ====="
            docker run -d --name ticketmon-backend -p 80:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              -e BASE_URL="${{ secrets.BASE_URL }}" \
              -e FRONT_BASE_URL="${{ secrets.FRONT_BASE_URL }}" \
              ghcr.io/uiseon98/ticketmongo-backend:latest
