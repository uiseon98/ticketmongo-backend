# 🌐 운영환경 도메인 설정
app:
  base-url: ${BASE_URL}
  front-base-url: ${FRONT_BASE_URL}
# 💳 토스페이먼츠 환경변수 주입
toss:
  client-key: ${TOSS_CLIENT_KEY} # 환경 변수에서 주입
  secret-key: ${TOSS_SECRET_KEY} # 환경 변수에서 주입
# 🤖 Together AI API 설정
ai:
  together:
    api-key: ${TOGETHER_API_KEY} # 환경 변수에서 주입
    api-url: https://api.together.xyz/v1/chat/completions
    model: meta-llama/Llama-3.3-70B-Instruct-Turbo-Free
    timeout-seconds: 30
    max-retries: 3
# 🌍 CORS 설정
cors:
  allowed-origins:
    - "https://ticketmongo.store"    # 프론트엔드 서비스 도메인
    - "https://api.ticketmongo.store" # 백엔드 API 도메인
onesignal:
  app-id: ${ONESIGNAL_APP_ID}        # 운영 환경에서 환경 변수로 관리
  api-key: ${ONESIGNAL_API_KEY}
spring:
  # 운영 데이터베이스 연결 설정
  # 모든 값은 환경 변수로부터 주입 (보안상 민감 정보 직접 노출 금지)
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  # JPA (Hibernate) 관련 설정
  jpa:
    hibernate:
      ddl-auto: validate             # 운영 환경에서는 DDL 자동 변경을 금지하고 스키마 유효성만 검사
    show-sql: false                  # 운영 환경에서는 SQL 쿼리 출력을 비활성화하여 성능 및 보안을 강화
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect # ✅ DB 종류를 명시하여 연결 오류 해결
        format_sql: false
  # Redis 연결 설정
  # 모든 값은 환경 변수로부터 주입
  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      # username: ${SPRING_DATA_REDIS_USERNAME} # ElastiCache IAM 인증 시에는 사용하지 않음
      # password: ${SPRING_DATA_REDIS_PASSWORD} # ElastiCache IAM 인증 시에는 사용하지 않음
      ssl:
        enabled: ${SPRING_DATA_REDIS_SSL:true}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            client-name: Google
            authorization-grant-type: authorization_code
            redirect-uri: 'https://api.ticketmongo.store/login/oauth2/code/google'
            scope:
              - profile
              - email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: 'https://api.ticketmongo.store/login/oauth2/code/naver'
            scope:
              - name
              - email
            provider: naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: 'https://api.ticketmongo.store/login/oauth2/code/kakao'
            scope:
              - profile_nickname
              - account_email
            provider: kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
# 🔐 JWT (JSON Web Token) 관련 설정
# 모든 값은 환경 변수로부터 주입
jwt:
  secret: ${JWT_SECRET_KEY} # openssl rand -base64 32
  access-expiration-ms: ${JWT_ACCESS_EXPIRATION_MS:600000}
  refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:86400000}
# 📊 로깅 레벨 설정
# 운영 환경에서는 불필요한 로그 생성을 줄이기 위해 로그 레벨을 높게 설정
logging:
  level:
    root: WARN  # 기본 로그 레벨을 WARN으로 설정
    com.team03: INFO  # 팀 패키지의 로그 레벨을 INFO로 설정
# 📚 Swagger API 문서 설정
swagger:
  enabled: false  # 운영 환경에서는 보안을 위해 Swagger 문서를 비활성화

# 💎 AWS S3 스토리지 설정
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}    # GitHub Secret 변수를 그대로 사용
      secret-key: ${AWS_SECRET_ACCESS_KEY}  # GitHub Secret 변수를 그대로 사용
    region:
      static: ap-northeast-2
    s3:
      bucket: ${AWS_S3_BUCKET}             # GitHub Secret 변수를 그대로 사용
      profile-prefix: profile-imgs/
      poster-prefix: poster-imgs/
      seller-docs-prefix: seller-docs/